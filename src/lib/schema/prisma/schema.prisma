// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator zod {
  provider                         = "zod-prisma-types"
  output                           = "./../generated/zod"
  prismaClientPath                 = "./../../prisma"
  useMultipleFiles                 = true // default is false
  writeBarrelFiles                 = true // default is true
  addInputTypeValidation           = true // default is true
  addIncludeType                   = true // default is true
  addSelectType                    = true // default is true
  createInputTypes                 = true // default is true
  createModelTypes                 = true // default is true
  validateWhereUniqueInput         = true // default is true
  createOptionalDefaultValuesTypes = true // default is false
  createRelationValuesTypes        = true // default is false
  createPartialTypes               = true // default is false
  useDefaultValidators             = true // default is true
  coerceDate                       = true // default is true
  writeNullishInModelTypes         = false // default is false
  useTypeAssertions                = true // default is false
}

model Book {
  id              Int      @id @default(autoincrement())
  /// @zod.string.min(1,{ message: "required" })
  title           String
  /// @zod.string.min(1,{ message: "required" })
  displayLanguage String
  /// @zod.string.min(1,{ message: "required" })
  description     String
  /// @zod.string.min(1,{ message: "required" })
  slug            String   @unique @db.VarChar(26)
  /// @zod.string.min(1,{ message: "required" })
  imageUrl        String   @default("")
  /// @zod.string.min(1,{ message: "required" })
  type            String   @default("book")
  /// @zod.number.min(1,{ message: ">=1" })
  seq             Int      @default(1)
  /// @zod.number.min(1,{ message: ">=1" })
  difficulty      Int      @default(1)
  pages           Page[]
  createdAt       DateTime @default(now())
  modifiedAt      DateTime @updatedAt
}

model Page {
  id              Int      @id @default(autoincrement())
  /// @zod.string.min(1,{ message: "required" })
  title           String
  /// @zod.string.min(1,{ message: "required" })
  slug            String
  /// @zod.string.min(1,{ message: "required" })
  displayLanguage String
  /// @zod.string.min(1,{ message: "required" })
  type            String   @default("page")
  /// @zod.number.min(1,{ message: ">=1" })
  seq             Int      @default(1)
  /// @zod.number.min(1,{ message: ">=1" })
  difficulty      Int      @default(1)
  body            String   @default("")
  book            Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)
  bookId          Int
  createdAt       DateTime @default(now())
  modifiedAt      DateTime @updatedAt
}
